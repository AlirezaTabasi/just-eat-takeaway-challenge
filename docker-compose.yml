version: '3'
services:
  player1:
    container_name: player1
    depends_on:
      - redis
      - kafka
    build:
      context: player
      dockerfile: Dockerfile
    image: player:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_ADDRESS: "kafka:9092"
      PLAYER_NAME: player1
      PLAYER_TOPIC_NAME: topic1
      OPPONENT_TOPIC_NAME: topic2
      OPPONENT_PORT: 8081

  player2:
    container_name: player2
    depends_on:
      - redis
      - kafka
    build:
      context: player
      dockerfile: Dockerfile
    image: player:latest
    ports:
      - "8081:8080"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_ADDRESS: "kafka:9092"
      PLAYER_NAME: player2
      PLAYER_TOPIC_NAME: topic2
      OPPONENT_TOPIC_NAME: topic1
      OPPONENT_PORT: 8080

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
